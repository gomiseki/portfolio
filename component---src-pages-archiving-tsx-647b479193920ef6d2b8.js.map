{"version":3,"file":"component---src-pages-archiving-tsx-647b479193920ef6d2b8.js","mappings":"oMAGMA,EAAYC,EAAAA,QAAAA,IAAAA,WAAU,kEAAVA,CAAU,wEAEN,YAAQ,SAALC,MAAkBC,QAAQC,UAAU,IACvC,gBAAGC,EAAI,EAAJA,KAAMH,EAAK,EAALA,MAAK,OAAOG,GAAQH,EAAMC,QAAQG,cAAc,IAClE,YAAO,SAAJD,KAAmB,EAAI,EAAG,IAG3B,SAASE,EAAY,GAA2C,IAAzCC,EAAQ,EAARA,SACpC,GAAwBC,EAAAA,EAAAA,WAAS,GAA1BJ,EAAI,KAAEK,EAAO,KAEpB,OACEC,EAAAA,cAACX,EAAS,CACRK,KAAMA,EACNO,YAAa,kBAAMF,GAAQ,EAAK,EAChCG,aAAc,kBAAMH,GAAQ,EAAM,GAEjCF,EAGP,CCtBA,MAAe,IAA0B,0D,2kBCWnCM,EAAUb,EAAAA,QAAAA,IAAAA,WAAU,CAAAc,YAAAA,qBAAAC,YAAAA,eAAVf,CAAU,+DAMpBgB,EAAYhB,EAAAA,QAAAA,IAAAA,WAAU,CAAAc,YAAAA,uBAAAC,YAAAA,eAAVf,CAAU,uFAQtBiB,EAAajB,EAAAA,QAAAA,IAAAA,WAAU,CAAAc,YAAAA,wBAAAC,YAAAA,eAAVf,CAAU,mMAIH,SAACkB,GAAK,OAAKA,EAAMC,eAAe,IACpC,SAACD,GAAK,OAAKA,EAAME,eAAe,IAQhDC,EAAOrB,EAAAA,QAAAA,IAAAA,WAAU,CAAAc,YAAAA,kBAAAC,YAAAA,eAAVf,CAAU,4HAMjBsB,EAAOtB,EAAAA,QAAAA,KAAAA,WAAW,CAAAc,YAAAA,kBAAAC,YAAAA,eAAXf,CAAW,kDACb,YAAQ,SAALC,MAAkBC,QAAQG,cAAc,IAKhDkB,EAAUvB,EAAAA,QAAAA,IAAAA,WAAU,CAAAc,YAAAA,qBAAAC,YAAAA,eAAVf,CAAU,gEAQpBwB,EAAcxB,EAAAA,QAAAA,IAAAA,WAAU,CAAAc,YAAAA,yBAAAC,YAAAA,eAAVf,CAAU,oEA2D9B,MApDA,WACE,IAAMyB,GAAOC,EAAAA,EAAAA,IAAe,cAW5B,OACEhB,EAAAA,cAACiB,EAAAA,QAAM,CAACC,KAAK,aACXlB,EAAAA,cAACM,EAAS,KACRN,EAAAA,cAAAA,KAAAA,CAAImB,MAAO,CAAEC,aAAc,SAAS,aACpCpB,EAAAA,cAACG,EAAO,KACLkB,EAAAA,EAAAA,KAAkB,SAACC,GAAO,OACzBtB,EAAAA,cAACJ,EAAW,KACVI,EAAAA,cAACuB,EAAAA,GAAI,CAACC,GAAIF,EAAQG,KAAMC,OAAO,UAC7B1B,EAAAA,cAACO,EAAU,CACTG,gBAAiBY,EAAQZ,gBACzBD,gBAAiBa,EAAQb,iBAAmBM,EAAKY,QAAQC,MACtDC,MAAK,SAACC,GAAS,OAAKA,EAAKC,OAAST,EAAQb,eAAe,IACzDuB,WAEHhC,EAAAA,cAAAA,MAAAA,CAAKmB,MAAO,CACVc,MAAO,OAAQC,QAAS,OAAQC,eAAgB,eAAgBC,WAAY,SAAUhB,aAAc,SAGpGpB,EAAAA,cAACW,EAAI,CACH0B,IACEtB,EAAKY,QAAQC,MACVC,MAAK,SAACC,GAAS,OAAKA,EAAKC,OAAST,EAAQgB,SAAS,IACnDN,YAGPhC,EAAAA,cAACY,EAAI,KAAEU,EAAQS,OAEjB/B,EAAAA,cAACc,EAAW,KAAEQ,EAAQiB,eAGd,KAGlBvC,EAAAA,cAACa,EAAO,CAACwB,IAAKG,KAKtB,C","sources":["webpack://portfolio/./src/components/glittingBox.tsx","webpack://portfolio/./src/images/teemoCheers.png","webpack://portfolio/./src/pages/archiving.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Conatiner = styled.div<{over:boolean}>`\r\n  padding: 2px;\r\n  border: 1px solid ${({ theme }) => theme.palette.borderDark};\r\n  background-color: ${({ over, theme }) => over && theme.palette.fontColorLight};\r\n  opacity: ${({ over }) => (over ? 1 : 0.8)};\r\n`;\r\n\r\nexport default function GlittingBox({ children }:{children: React.ReactNode}) {\r\n  const [over, setOver] = useState(false);\r\n\r\n  return (\r\n    <Conatiner\r\n      over={over}\r\n      onMouseOver={() => setOver(true)}\r\n      onMouseLeave={() => setOver(false)}\r\n    >\r\n      {children}\r\n    </Conatiner>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/teemoCheers-4e9a210c98bd6aadb0b8b7ca26fc1d9f.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { graphql, Link, useStaticQuery } from 'gatsby';\r\n\r\nimport Layout from './layout';\r\nimport GlittingBox from '../components/glittingBox';\r\n\r\nimport teemo from '../images/teemoCheers.png';\r\n\r\nimport contents from '../contents/archiving.json';\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  padding: 50px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ContentBox = styled.div<{backgroundImage:string, backgroundColor:string}>`\r\n  width: 370px;\r\n  height: 250px;\r\n  padding: 20px 30px;\r\n  background-image: url(${(props) => props.backgroundImage});\r\n  background-color: ${(props) => props.backgroundColor};\r\n  background-size: cover;\r\n  display:flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 80px;\r\n  height: 80px;\r\n  filter: invert(89%) sepia(25%) saturate(381%) hue-rotate(212deg) brightness(110%) contrast(97%);\r\n`;\r\n\r\nconst Name = styled.span`\r\n  color: ${({ theme }) => theme.palette.fontColorLight};\r\n  font-size: 40px;\r\n  font-weight: bolder;\r\n`;\r\n\r\nconst EmoLogo = styled.img`\r\n  width: 200px;\r\n  position:absolute;\r\n  bottom: 0;\r\n  right: 0;\r\n  right: 50px;\r\n`;\r\n\r\nconst Description = styled.pre`\r\n  color: #f7f8fc;\r\n  font-weight: medium;\r\n  margin: 15px;\r\n  line-height: 150%;\r\n`;\r\n\r\nfunction Archiving() {\r\n  const data = useStaticQuery(graphql`\r\n   query MyQuery {\r\n    allFile {\r\n      nodes {\r\n        name\r\n        publicURL\r\n      }\r\n    }\r\n  }\r\n  `);\r\n\r\n  return (\r\n    <Layout path=\"Archiving\">\r\n      <Container>\r\n        <h1 style={{ marginBottom: '50px' }}>Archiving</h1>\r\n        <Content>\r\n          {contents.data.map((content) => (\r\n            <GlittingBox>\r\n              <Link to={content.link} target=\"_blank\">\r\n                <ContentBox\r\n                  backgroundColor={content.backgroundColor}\r\n                  backgroundImage={content.backgroundImage && data.allFile.nodes\r\n                    .find((node: any) => node.name === content.backgroundImage)\r\n                    .publicURL}\r\n                >\r\n                  <div style={{\r\n                    width: '100%', display: 'flex', justifyContent: 'space-around', alignItems: 'center', marginBottom: '40px',\r\n                  }}\r\n                  >\r\n                    <Logo\r\n                      src={\r\n                        data.allFile.nodes\r\n                          .find((node: any) => node.name === content.logoImage)\r\n                          .publicURL\r\n                      }\r\n                    />\r\n                    <Name>{content.name}</Name>\r\n                  </div>\r\n                  <Description>{content.description}</Description>\r\n                </ContentBox>\r\n              </Link>\r\n            </GlittingBox>\r\n          ))}\r\n        </Content>\r\n        <EmoLogo src={teemo} />\r\n      </Container>\r\n    </Layout>\r\n\r\n  );\r\n}\r\n\r\nexport default Archiving;\r\n"],"names":["Conatiner","styled","theme","palette","borderDark","over","fontColorLight","GlittingBox","children","useState","setOver","React","onMouseOver","onMouseLeave","Content","displayName","componentId","Container","ContentBox","props","backgroundImage","backgroundColor","Logo","Name","EmoLogo","Description","data","useStaticQuery","Layout","path","style","marginBottom","contents","content","Link","to","link","target","allFile","nodes","find","node","name","publicURL","width","display","justifyContent","alignItems","src","logoImage","description","teemo"],"sourceRoot":""}